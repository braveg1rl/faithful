// Generated by CoffeeScript 1.12.2
(function() {
  var delay, faithful, makePromise;

  makePromise = require("make-promise");

  module.exports = faithful = {};

  faithful.log = function(promise) {
    return promise.then(function(value) {
      return console.log(value);
    }).then(null, function(err) {
      return console.error(err);
    });
  };

  faithful.dir = function(promise) {
    return promise.then(function(value) {
      return console.log(value);
    }).then(null, function(err) {
      return console.error(err);
    });
  };

  faithful["return"] = faithful.fulfill = function(value) {
    return makePromise(function(cb) {
      return cb(null, value);
    });
  };

  faithful["throw"] = faithful.fail = faithful.reject = function(error) {
    return makePromise(function(cb) {
      return cb(error, null, true);
    });
  };

  faithful.ensurePromise = function(value) {
    if (faithful.isPromise(value)) {
      return value;
    }
    return faithful["return"](value);
  };

  faithful.isPromise = function(value) {
    return value && typeof value.then === "function";
  };

  faithful.forceTimeout = function(time, promise) {
    return makePromise(function(cb) {
      var timerId;
      timerId = delay(time, function() {
        return cb(new Error("Timeout after " + time + " ms."));
      });
      return promise.then(function(result) {
        clearTimeout(timerId);
        return cb(null, result);
      }).then(null, function(err) {
        clearTimeout(timerId);
        return cb(err);
      });
    });
  };

  delay = function(time, fn) {
    return setTimeout(fn, time);
  };

}).call(this);

//# sourceMappingURL=utilities.js.map
